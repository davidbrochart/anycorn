[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "anycorn"
dynamic = ["version"]
requires-python = ">=3.8"
description = "A fork of Hypercorn that uses AnyIO"
authors = [
    { name = "Philip Graham Jones", email = "philip.graham.jones@googlemail.com" },
    { name = "David Brochart", email = "david.brochart@gmail.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
include = ["src/anycorn/py.typed"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/davidbrochart/anycorn/"

dependencies = [
    "exceptiongroup >= 1.2.0, <2.0; python_version<'3.11'",
    "h11",
    "h2 >=3.1.0",
    "anyio >=4.0, <5.0",
    "priority",
    "tomli; python_version<'3.11'",
    "wsproto >=0.14.0",
]

[project.optional-dependencies]
h3 = [
    "aioquic >= 0.9.0, < 1.0",
]
test = [
    "pytest",
    "mock",
    "trio",
    "mypy",
]

[project.scripts]
anycorn = "anycorn.__main__:main"

[tool.mypy]
allow_redefinition = true
disallow_any_generics = false
disallow_subclassing_any = true
disallow_untyped_calls = false
disallow_untyped_defs = true
implicit_reexport = true
no_implicit_optional = true
show_error_codes = true
strict = true
strict_equality = true
strict_optional = false
warn_redundant_casts = true
warn_return_any = false
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module =["aioquic.*", "cryptography.*", "h11.*", "h2.*", "priority.*", "trio.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--showlocals --strict-markers --color=yes -v"
testpaths = ["tests"]

[tool.ruff]
line-length = 100
lint.select = [
    "ASYNC",        # flake8-async
    "E", "F", "W",  # default Flake8
    "G",            # flake8-logging-format
    "I",            # isort
    "ISC",          # flake8-implicit-str-concat
    "PGH",          # pygrep-hooks
    "RUF100",       # unused noqa (yesqa)
    "UP",           # pyupgrade
]

[tool.hatch.version]
path = "src/anycorn/__init__.py"
